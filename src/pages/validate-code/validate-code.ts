import { Component } from '@angular/core';
import { IonicPage, NavController, NavParams } from 'ionic-angular';
import {AlertController} from 'ionic-angular';
import {FormBuilder, FormGroup, Validators} from '@angular/forms';
import {UserProvider} from '../../providers/user/user';
/**
 * Generated class for the ValidateCodePage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */

@IonicPage()
@Component({
  selector: 'page-validate-code',
  templateUrl: 'validate-code.html',
})
export class ValidateCodePage {

  private code : string;
  validateCodeForm : FormGroup;
  
  constructor(
    public navCtrl: NavController,
    public navParams: NavParams,
    private formBuilder: FormBuilder,
    private alertCtrl: AlertController,
    private userProvider: UserProvider,

    ) {
    this.buildValidateCodeForm();
  }

  ionViewDidLoad() {
  }
  /**
   * Builds the validate code form and adds it's validators.
   */
  private buildValidateCodeForm(): void {
    this.validateCodeForm = this.formBuilder.group({
      email: [
        '',
        [
          Validators.required, Validators.minLength(4),
          Validators.maxLength(30)
        ]
      ]
    });
  }
  /**
   * Sends the field's information to validate in the API and
   * goes to the tabs view.
   */
  onSubmit(): void {
    this.code = this.validateCodeForm.value.code;
    this.userProvider.validateCode(this.code).subscribe((resp) => {
      const registerSuccessAlert = this.alertCtrl.create(
        {title: 'Yay!', subTitle: 'Code validate succesfull.', buttons: ['Dismiss']});
      registerSuccessAlert.present();
    }, errmess => this.ErrorHandler(errmess));
  }
  /**
   * Displays an alert based on the error's message.
   * @param {any} errmess JSON with error generated by the API.
   */
  ErrorHandler(errmess) {
    const registerErrorAlert = this.alertCtrl.create(
        {title: 'Ups...', subTitle: errmess.message, buttons: ['Dismiss']});
    registerErrorAlert.present();
  }
}
